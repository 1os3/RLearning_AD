# 无人机自动驾驶强化学习系统默认配置

# 通用设置
general:
  seed: 42
  device: xpu  # 使用 Intel XPU
  debug: false
  log_level: info
  checkpoint_dir: checkpoints
  log_dir: logs

# 环境设置
environment:
  # AirSim 设置
  airsim:
    ip: 127.0.0.1
    port: 41451
    timeout_ms: 10000
    vehicle_name: drone1
    client_type: multirotor
  
  # 图像设置 - 保持原始分辨率
  image:
    use_rgb: true
    use_depth: false
    keep_original_resolution: true  # 保持AirSim返回的原始分辨率
    frame_stack: 4  # 堆叠帧数量
  
  # 动作空间
  action_space:
    continuous: true
    action_dim: 4  # x,y,z速度和偏航角速度
    max_velocity: [3.0, 3.0, 3.0]  # m/s
    max_yaw_rate: 45.0  # deg/s

  # 状态空间
  state_space:
    use_position: true
    use_velocity: true
    use_acceleration: true
    use_orientation: true
    use_angular_velocity: false
  
  # 奖励设置
  reward:
    distance_weight: 2.5     # 增加距离奖励权重，鼓励积极向目标移动
    velocity_weight: 1.0     # 增加速度奖励权重，鼓励朝向目标的速度
    orientation_weight: 0.3
    energy_weight: 0.2
    collision_penalty: 10.0
    success_reward: 30.0     # 增加成功奖励，强化达到目标的正向反馈
    step_penalty: 0.01
    height_penalty: 2.0      # 高度惩罚权重，当高度超过初始高度50m时开始惩罚

  # 终止条件
  termination:
    max_steps: 2000
    success_distance_threshold: 1.0  # m
  
  # 目标点采样设置
  target_sampling:
    # XY平面范围（水平范围）
    xy_min: -50.0  # 最小水平范围 (m)
    xy_max: 50.0   # 最大水平范围 (m)
    # Z轴范围（高度范围）。注意：AirSim中负值表示向上
    z_min: -20.0   # 最小高度 (m)，负值表示向上
    z_max: -50.0   # 最大高度 (m)，负值表示向上
    # 与初始点的最小距离，避免目标点太近
    min_distance: 20.0  # 最小距离 (m)
    # 与初始点的最大距离，避免目标点太远
    max_distance: 80.0  # 最大距离 (m)

# 在顶层也提供奖励设置（增强配置健壮性）
reward:
  distance_weight: 1.0
  velocity_weight: 0.5
  orientation_weight: 0.3
  energy_weight: 0.2
  collision_penalty: 10.0
  success_reward: 20.0
  step_penalty: 0.01
  height_penalty: 5.0  # 高度惩罚权重，当高度超过初始高度200m时开始惩罚

# 模型设置
model:
  # 输入模块
  input_module:
    # 图像处理
    image_processor:
      backbone: efficientnet  # 可选: efficientnet, resnet, mobilenet
      pretrained: true
      feature_dim: 768       # 增大特征维度，提高表达能力
      patch_size: 16  # 动态patch大小的初始值
      attention_heads: 12    # 注意力头数
      dropout_rate: 0.1      # dropout率
      min_patch_size: 8      # 最小patch大小
      max_patch_size: 32     # 最大patch大小
    
    # 姿态编码器
    pose_encoder:
      input_dim: 12  # 速度(3), 加速度(3), 角度(3), 角速度(3)
      hidden_dims: [128, 256, 384, 512, 640]  # 更深层次和更大维度
      output_dim: 384    # 增大输出维度
    
    # 目标编码器
    target_encoder:
      input_dim: 3  # 距离(1), 相对方向(2)
      hidden_dims: [64, 128, 256, 384]  # 增加中间层维度和层数
      output_dim: 256    # 增大输出维度
  
  # 多模态融合模块
  fusion_module:
    # 3D-Depthwise卷积
    depthwise_conv:
      spatial_kernel_size: 5    # 增大空间卷积核大小
      temporal_kernel_size: 7  # 增加时间维度的卷积核大小
      channels: 1024  # 显著增加通道数
    
    # Cross-modal Transformer
    cross_attention:
      num_heads: 16  # 增加注意力头数
      hidden_dim: 1024  # 显著增加隐含维度
      dropout: 0.15   # 优化dropout率
      num_layers: 12  # 增加层数
    
    # 记忆库
    memory_bank:
      memory_size: 64  # 显著增加记忆库大小
      key_dim: 1024  # 显著增加Key维度
      value_dim: 1024  # 显著增加Value维度
      use_attention_retrieval: true
      num_heads: 8    # 为检索添加多头注意力
  
  # 策略模块
  policy_module:
    trunk_dim: 1024     # 显著增大共享trunk的输出维度
    trunk_hidden_dims: [256, 512, 768, 1024]  # 操控trunk内部结构
    use_layernorm: true    # 使用层正则化
    dropout_rate: 0.15     # 增大dropout提高正则化
    activation: relu     # 保持原有的激活函数
    
    # Actor网络
    actor:
      hidden_dims: [768, 512, 384, 256]  # 增加层数和调整维度分布
      activation: relu     # 保持原有的激活函数
      log_std_min: -10
      log_std_max: 2
      use_layernorm: true   # 使用层正则化
    
    # Critic网络
    critic:
      hidden_dims: [768, 512, 384, 256]  # 增加层数和调整维度分布
      activation: relu     # 保持原有的激活函数
      num_critics: 3       # 使用3个Q网络进一步降低过估计
      use_layernorm: true   # 使用层正则化

# 算法设置
algorithm:
  name: sac  # Soft Actor-Critic
  
  # 基本设置
  gamma: 0.99
  tau: 0.005  # 目标网络软更新参数
  alpha_lr: 3e-4
  actor_lr: 3e-4
  critic_lr: 3e-4
  
  # SAC特定设置
  alpha: 0.2  # 初始熵系数
  automatic_entropy_tuning: true
  target_entropy_scale: 1.0
  
  # 优先经验回放
  replay_buffer:
    capacity: 1000000
    use_per: true  # 使用优先经验回放
    alpha: 0.6
    beta: 0.4
    beta_increment: 0.001
  
  # 辅助任务
  auxiliary:
    use_auxiliary: true
    contrastive_weight: 0.1
    reconstruction_weight: 0.1
    pose_prediction_weight: 0.1
    
    # 对比预测编码 (CPC)
    contrastive:
      state_dim: 15  # 状态维度
      hidden_dim: 384  # 增大隐藏层维度
      output_dim: 512  # 增大输出层维度
      num_negatives: 32  # 增加负样本数量
    
    # 帧重建
    reconstruction:
      state_dim: 15  # 状态维度
      action_dim: 4
      hidden_dims: [128, 256, 384]  # 增加层数和维度
      output_dim: 15
    
    # 姿态回归
    pose_regression:
      state_dim: 15  # 状态维度
      action_dim: 4
      hidden_dims: [128, 256, 384]  # 增加层数和维度
      pose_dim: 9
  
  # 泛化增强
  regularization:
    use_domain_randomization: true
    use_noise_injection: true
    use_frame_dropping: true

# 训练设置
training:
  batch_size: 128
  num_steps: 1000000
  update_after: 1000
  update_every: 50
  num_updates: 1
  eval_interval: 5000
  save_interval: 10000
  gradient_steps: 1
  resume_training: false  # 是否从检查点恢复训练
  checkpoint_path: ""  # 恢复训练的检查点路径

# 评估设置
evaluation:
  num_episodes: 10
  render: false
  save_video: true
  deterministic: true